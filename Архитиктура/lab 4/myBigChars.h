#pragma once
#include <stdio.h>
#include <string.h>
#include "myTerm.h"
#define BOXCHAR_REC 'a'
#define BOXCHAR_BR 'j'
#define BOXCHAR_BL 'm'
#define BOXCHAR_TR 'k'
#define BOXCHAR_TL 'l'
#define BOXCHAR_VERT 'x'
#define BOXCHAR_HOR 'q'

int bc_printAstr(char *str);
int bc_printA(char str); //выводит строку символов с использованием дополнительной кодировочной таблицы;
int bc_box(int x1, int y1, int x2, int y2); //выводит на экран псевдографическую рамку, в которой левый верхний угол располагается в строке x1 и столбце y1, а еѐ ширина и высота равны y2 столбцов и x2 строк;
int bc_printbigchar(int *big, int x, int y, enum colors fg, enum colors bg); //выводит на экран «большой символ» размером восемь строк на восемь столбцов, левый верхний угол которого располагается в строке x и столбце y. 
/*Третий и четвѐртый параметры определяют цвет и фон выводимых символов.
«Символ» выводится, исходя из значений массива целых чисел,
следующим образом. В первой строке выводится 8 младших бит
первого числа, во второй – следующие 8, в третьей и 4-ой – следующие. В 5-ой строке выводятся 8 младших бит второго числа и
т.д. При этом если значение бита равно 0, то выводится символ
«пробел», иначе – символ, закрашивающий знакоместо(ACS_CKBOARD);*/
int bc_setbigcharpos(int *big, int x, int y, int value); // устанавливает значение знакоместа «большого символа» в строке x и столбце y в значение value;

int bc_getbigcharpos(int *big, int x, int y, int *value); //возвращает значение позиции в «большом символе» в строке x и столбце y;

int bc_bigcharwrite(int fd, int *big, int count); //записывает заданное число «больших символов» в файл. Формат записи определяется пользователем;
int bc_bigcharread(int fd, int *big, int need_count, int *count); //считывает из файла заданное количество «больших символов». Третий параметр указывает адрес переменной, в которую помещается количество считанных символов или 0 в случае ошибки